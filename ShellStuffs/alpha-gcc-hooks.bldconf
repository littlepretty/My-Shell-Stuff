#!/bin/bash
#
# alpha-gcc-hooks.bldconf - file containing global information necessary to build
#                           PARSEC with hooks API
#
# Copyright (C) 2006-2007 Princeton University
# Written by Christian Bienia, modified by YJQ


# Assume OS type is Linux + default, set HOME directories for compiler and binutils

# CC_HOME is installation root of the C compiler
export CC_HOME="/home/yjq/Softwares/alphaev67-unknown-linux-gnu"

# BINUTIL_HOME is installation root of the GNU binutils
export BINUTIL_HOME="/home/yjq/Softwares/alphaev67-unknown-linux-gnu"

# GNUTOOL_HOME is installation root of the GNU tools
export GNUTOOL_HOME="/usr"
# BINARY_PREFIX is the string which is used as prefix for the GNU binaries
export BINARY_PREFIX="alphaev67-unknown-linux-gnu-"



# Compilers and preprocessors
export CC="${CC_HOME}/bin/${BINARY_PREFIX}gcc"
export CXX="${CC_HOME}/bin/${BINARY_PREFIX}g++"
#export CPP="${CC_HOME}/bin/cpp"
export CPP="/usr/bin/cpp"
export CXXCPP=""

# GNU Binutils
export LD="${BINUTIL_HOME}/bin/${BINARY_PREFIX}ld"
export AS="${BINUTIL_HOME}/bin/${BINARY_PREFIX}as"
export AR="${BINUTIL_HOME}/bin/${BINARY_PREFIX}ar"
export RANLIB="${BINUTIL_HOME}/bin/${BINARY_PREFIX}ranlib"
export STRIP="${BINUTIL_HOME}/bin/${BINARY_PREFIX}strip"

# GNU Tools
export M4="${GNUTOOL_HOME}/bin/m4"
export MAKE="${GNUTOOL_HOME}/bin/make"

# Flags for increased portability of binaries
PORTABILITY_FLAGS="-static -static-libgcc"

# Arguments to use
export CFLAGS="-O3 -funroll-loops -fprefetch-loop-arrays ${PORTABILITY_FLAGS}"
export CXXFLAGS="-O3 -funroll-loops -fprefetch-loop-arrays -fpermissive -fno-exceptions ${PORTABILITY_FLAGS}"
export CPPFLAGS=""
export CXXCPPFLAGS=""
export LDFLAGS="-static -L${CC_HOME}/lib64 -L${CC_HOME}/lib"
export LIBS=""
export EXTRA_LIBS=""


# Add PARSEC version to compiler flags
if [ -f "${PARSECDIR}/version" ]; then
  CFLAGS="${CFLAGS} -DPARSEC_VERSION=$(${CAT} ${PARSECDIR}/version)"
  CXXFLAGS="${CXXFLAGS} -DPARSEC_VERSION=$(${CAT} ${PARSECDIR}/version)"
fi

# Java
export JAVA_HOME="/usr"
export JAVAC="${JAVA_HOME}/bin/javac"

# Version numbers
if [ -x ${CC} ]; then
  CC_ver=$(${CC} --version)
else
  CC_ver=""
fi
if [ -x ${CXX} ]; then
  CXX_ver=$(${CXX} --version)
else
  CXX_ver=""
fi
if [ -x ${LD} ]; then
  LD_ver=$(${LD} --version)
else
  LD_ver=""
fi
if [ -x ${JAVAC} ]; then
  JAVAC_ver=$(${JAVAC} -version 2>&1)
else
  JAVAC_ver=""
fi


# Enable PARSEC hooks
CFLAGS="${CFLAGS} -DENABLE_PARSEC_HOOKS -I${PARSECDIR}/pkgs/libs/hooks/inst/${PARSECPLAT}/include"
CXXFLAGS="${CXXFLAGS} -DENABLE_PARSEC_HOOKS -I${PARSECDIR}/pkgs/libs/hooks/inst/${PARSECPLAT}/include"
LDFLAGS="${LDFLAGS} -L${PARSECDIR}/pkgs/libs/hooks/inst/${PARSECPLAT}/lib"
LIBS="${LIBS} -lhooks"

# Use alpha specific flags

CFLAGS_NOEV67="$CFLAGS -mcpu=21064 -mtune=21064"
CXXFLAGS_NOEV67="$CXXFLAGS -mcpu=21064 -mtune=21064"

CFLAGS="${CFLAGS} -mcpu=ev67 -mtune=ev67"
CXXFLAGS="${CXXFLAGS} -mcpu=ev67 -mtune=ev67"

# Add directory with hooks library to library search path
if [ -z "${LD_LIBRARY_PATH}" ]; then
  export LD_LIBRARY_PATH="${PARSECDIR}/pkgs/libs/hooks/inst/${PARSECPLAT}/lib"
else
  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${PARSECDIR}/pkgs/libs/hooks/inst/${PARSECPLAT}/lib"
fi
